<mxfile host="app.diagrams.net" modified="2022-10-25T09:48:46.115Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36 Edg/106.0.1370.52" etag="YO57jBucXp3HEZyxnMgU" version="20.5.1" type="github">
  <diagram id="TceX393t4UuMsp8WdUJ8" name="第 1 页">
    <mxGraphModel dx="1422" dy="804" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1200" pageHeight="1920" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="D6XNFb5UC1GtJaUE1ZK0-5" value="RWMutex&amp;nbsp;原理" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=20;fontFamily=Architects Daughter;sketch=1;hachureGap=4;jiggle=2;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
          <mxGeometry x="390" y="121" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="D6XNFb5UC1GtJaUE1ZK0-6" value="&lt;div&gt;type RWMutex struct {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; w Mutex // 互斥锁解决多个writer的竞争&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; writerSem uint32 // writer信号量&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; readerSem uint32 // reader信号量&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; readerCount int32 // reader的数量&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; readerWait int32 // writer等待完成的reader的数量&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;const rwmutexMaxReaders = 1 &amp;lt;&amp;lt; 30&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=20;fontFamily=Architects Daughter;sketch=1;hachureGap=4;jiggle=2;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
          <mxGeometry x="135" y="181" width="530" height="210" as="geometry" />
        </mxCell>
        <mxCell id="D6XNFb5UC1GtJaUE1ZK0-7" value="&lt;div&gt;RLock&lt;/div&gt;&lt;div&gt;1. 正常情况下就是直接readerCount++(atomic)&lt;/div&gt;&lt;div&gt;2. 如果readerCount的值小于0, 说明有写请求在wait, 此时阻塞&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=20;fontFamily=Architects Daughter;sketch=1;hachureGap=4;jiggle=2;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
          <mxGeometry x="120" y="1460" width="580" height="110" as="geometry" />
        </mxCell>
        <mxCell id="D6XNFb5UC1GtJaUE1ZK0-8" value="&lt;div&gt;RUnlock&lt;/div&gt;&lt;div&gt;1. readerCount--(atomic.AddInt32(-1))&lt;/div&gt;&lt;div&gt;2. 如果readerCount的值小于0, 说明有wait在等待, 此时调用rUnlockSlow, 执行readerWait--(atomic),&lt;/div&gt;&lt;div&gt;如果readerWait等于0, 说明写请求已经不需要等待了, 唤醒写请求(此时读请求数量有可能是大于0的哦)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=20;fontFamily=Architects Daughter;sketch=1;hachureGap=4;jiggle=2;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
          <mxGeometry x="120" y="1570" width="930" height="110" as="geometry" />
        </mxCell>
        <mxCell id="D6XNFb5UC1GtJaUE1ZK0-9" value="&lt;div&gt;Lock&lt;/div&gt;&lt;div&gt;1. 进来先加个锁, 然后readerCount-rwmutexMaxReaders(atomic), 使readerCount变成负数, 代表有写请求在wait&lt;/div&gt;&lt;div&gt;2. readerCount+rwmutexMaxReaders, 表示需要等待的读请求数量, 如果不为0, 则赋给readerWait, 表示&lt;/div&gt;&lt;div&gt;当前写请求需要等待的读请求数量, 然后休眠&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=20;fontFamily=Architects Daughter;sketch=1;hachureGap=4;jiggle=2;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
          <mxGeometry x="120" y="1710" width="1020" height="110" as="geometry" />
        </mxCell>
        <mxCell id="D6XNFb5UC1GtJaUE1ZK0-10" value="&lt;div&gt;UnLock&lt;/div&gt;&lt;div&gt;1. readerCount+rwmutexMaxReaders(atomic), 表示当前正在休眠的读请求数量&lt;/div&gt;&lt;div&gt;2. 使用for循环去唤醒正在wait休眠的读请求&lt;/div&gt;&lt;div&gt;3. 释放锁&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=20;fontFamily=Architects Daughter;sketch=1;hachureGap=4;jiggle=2;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
          <mxGeometry x="120" y="1840" width="730" height="110" as="geometry" />
        </mxCell>
        <mxCell id="D6XNFb5UC1GtJaUE1ZK0-11" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;func (rw *RWMutex) RLock() {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; if atomic.AddInt32(&amp;amp;rw.readerCount, 1) &amp;lt; 0 {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // rw.readerCount是负值的时候，意味着此时有writer等待请求锁，因为writer优先&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; runtime_SemacquireMutex(&amp;amp;rw.readerSem, false, 0)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;func (rw *RWMutex) RUnlock() {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; if r := atomic.AddInt32(&amp;amp;rw.readerCount, -1); r &amp;lt; 0 {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rw.rUnlockSlow(r) // 有等待的writer&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;func (rw *RWMutex) rUnlockSlow(r int32) {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; if atomic.AddInt32(&amp;amp;rw.readerWait, -1) == 0 {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 最后一个reader了，writer终于有机会获得锁了&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; runtime_Semrelease(&amp;amp;rw.writerSem, false, 1)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=20;fontFamily=Architects Daughter;sketch=1;hachureGap=4;jiggle=2;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
          <mxGeometry x="120" y="440" width="840" height="420" as="geometry" />
        </mxCell>
        <mxCell id="D6XNFb5UC1GtJaUE1ZK0-12" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;func (rw *RWMutex) Lock() {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; // 首先解决其他writer竞争问题&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; rw.w.Lock()&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; // 反转readerCount，告诉reader有writer竞争锁&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; r := atomic.AddInt32(&amp;amp;rw.readerCount, -rwmutexMaxReaders) + rwmutexMaxRead&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; // 如果当前有reader持有锁，那么需要等待&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; if r != 0 &amp;amp;&amp;amp; atomic.AddInt32(&amp;amp;rw.readerWait, r) != 0 {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; runtime_SemacquireMutex(&amp;amp;rw.writerSem, false, 0)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=20;fontFamily=Architects Daughter;sketch=1;hachureGap=4;jiggle=2;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
          <mxGeometry x="120" y="890" width="810" height="250" as="geometry" />
        </mxCell>
        <mxCell id="D6XNFb5UC1GtJaUE1ZK0-13" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;func (rw *RWMutex) Unlock() {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; // 告诉reader没有活跃的writer了&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; r := atomic.AddInt32(&amp;amp;rw.readerCount, rwmutexMaxReaders)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; // 唤醒阻塞的reader们&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; for i := 0; i &amp;lt; int(r); i++ {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; runtime_Semrelease(&amp;amp;rw.readerSem, false, 0)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; // 释放内部的互斥锁&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; rw.w.Unlock()&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=20;fontFamily=Architects Daughter;sketch=1;hachureGap=4;jiggle=2;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;" vertex="1" parent="1">
          <mxGeometry x="120" y="1180" width="620" height="250" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
